{"version":3,"sources":["util.js","actions/productActions.js","actions/types.js","components/Products.js","actions/cartActions.js","components/SizeFilter.js","components/PriceFilter.js","components/ColorFilter.js","reducers/productReducers.js","reducers/index.js","reducers/cartReducers.js","store.js","App.js","serviceWorker.js","index.js"],"names":["util","num","Number","toFixed","toLocaleString","filterProducts","products","size","color","minPrice","maxPrice","dispatch","type","payload","items","filter","x","availableSizes","indexOf","toUpperCase","price","Products","this","props","fetchProducts","_this","productItems","map","product","react_default","a","createElement","className","key","id","href","concat","onClick","e","addToCart","cartItems","src","sku","alt","title","handleAddToCart","Component","connect","state","filteredItems","cart","fetch","then","res","json","catch","err","data","slice","productAlreadyInCart","forEach","cp","count","push","Object","objectSpread","localStorage","setItem","JSON","stringify","SizeFilter","onChange","event","target","value","sortProducts","sort","b","useStyles","makeStyles","root","width","valuetext","classes","_React$useState","React","useState","_React$useState2","slicedToArray","setValue","Typography","gutterBottom","style","fontSize","Slider","newValue","valueLabelDisplay","aria-labelledby","getAriaValueText","min","max","onChangeCommitted","ColorFilter","console","log","initState","combineReducers","arguments","length","undefined","action","getItem","parse","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducers","applyMiddleware","thunk","App","es","components_SizeFilter","components_ColorFilter","components_PriceFilter","components_Products","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yQAAeA,EACK,SAAUC,GACtB,MAAO,SAAMC,OAAOD,EAAIE,QAAQ,IAAIC,iBAAmB,YCiBlDC,EAAiB,SAACC,EAAUC,EAAMC,EAAOC,EAAUC,GAAlC,OAA+C,SAC3EC,GAEAA,EAAS,CACPC,KCrB2B,kBDsB3BC,QAAS,CACPN,OACAC,QACAC,WACAC,WACAI,MAAOR,EAASS,OACd,SAACC,GAAD,OACY,KAATT,GAAeS,EAAEC,eAAeC,QAAQX,EAAKY,gBAAkB,IAChEH,EAAEI,OAASX,GACXO,EAAEI,OAASV,IACA,KAAVF,GAAgBQ,EAAER,QAAUA,UE7BjCa,8LAEFC,KAAKC,MAAMC,iDAEJ,IAAAC,EAAAH,KACDI,EAAeJ,KAAKC,MAAMjB,SAASqB,IAAI,SAACC,GAAD,OAC3CC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWC,IAAKL,EAAQM,IACrCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,KACEI,KAAI,IAAAC,OAAMR,EAAQM,IAClBG,QAAS,SAACC,GAAD,OAAOb,EAAKF,MAAMgB,UAAUd,EAAKF,MAAMiB,UAAWZ,KAE3DC,EAAAC,EAAAC,cAAA,OAAKU,IAAG,YAAAL,OAAcR,EAAQc,IAAtB,UAAmCC,IAAKf,EAAQgB,QACxDf,EAAAC,EAAAC,cAAA,SAAIH,EAAQgB,QAEdf,EAAAC,EAAAC,cAAA,SAAI/B,EAAoB4B,EAAQR,QARlC,IAQ8CS,EAAAC,EAAAC,cAAA,WAC5CF,EAAAC,EAAAC,cAAA,UACEC,UAAU,kBACVK,QAAS,SAACC,GAAD,OAAOb,EAAKF,MAAMsB,gBAAgBP,EAAGV,KAFhD,mBAUN,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAON,UA1BVoB,aAiCRC,cAJS,SAACC,GAAD,MAAY,CAClC1C,SAAU0C,EAAM1C,SAAS2C,cACzBT,UAAWQ,EAAME,KAAKpC,QAEgB,CAAEU,cFhCb,kBAAM,SAACb,GAClCwC,MAAM,kCACHC,KAAK,SAACC,GAAD,OAASA,EAAIC,SAClBC,MAAM,SAACC,GAAD,OACLL,MAAM,WACHC,KAAK,SAACC,GAAD,OAASA,EAAIC,SAClBF,KAAK,SAACK,GAAD,OAAUA,EAAKnD,aAExB8C,KAAK,SAACK,GACL9C,EAAS,CAAEC,KCfa,iBDeSC,QAAS4C,QEuBSlB,UCpChC,SAACzB,EAAOc,GAAR,OAAoB,SAACjB,GAC5C,IAAM6B,EAAY1B,EAAM4C,QACpBC,GAAuB,EAE3BnB,EAAUoB,QAAQ,SAACC,GACbA,EAAG3B,KAAON,EAAQM,KACpB2B,EAAGC,OAAS,EACZH,GAAuB,KAItBA,GACHnB,EAAUuB,KAAVC,OAAAC,EAAA,EAAAD,CAAA,GAAoBpC,EAApB,CAA6BkC,MAAO,KAEtCI,aAAaC,QAAQ,YAAaC,KAAKC,UAAU7B,IACjD7B,EAAS,CAAEC,KFdc,cEcKC,QAAS,CAAE2B,kBDqB5BO,CAAuD1B,GElChEiD,mLACK,IAAA7C,EAAAH,KACP,OACEO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,aACG,IADH,cAGEF,EAAAC,EAAAC,cAAA,UACEC,UAAU,eACVuC,SAAU,SAACC,GACT/C,EAAKF,MAAMlB,eACToB,EAAKF,MAAMjB,SACXkE,EAAMC,OAAOC,MACbjD,EAAKF,MAAMf,MACXiB,EAAKF,MAAMd,SACXgB,EAAKF,MAAMb,YAIfmB,EAAAC,EAAAC,cAAA,UAAQ2C,MAAM,IAAd,OACA7C,EAAAC,EAAAC,cAAA,UAAQ2C,MAAM,KAAd,MACA7C,EAAAC,EAAAC,cAAA,UAAQ2C,MAAM,KAAd,KACA7C,EAAAC,EAAAC,cAAA,UAAQ2C,MAAM,KAAd,KACA7C,EAAAC,EAAAC,cAAA,UAAQ2C,MAAM,KAAd,KACA7C,EAAAC,EAAAC,cAAA,UAAQ2C,MAAM,MAAd,MACA7C,EAAAC,EAAAC,cAAA,UAAQ2C,MAAM,OAAd,kBA3BW5B,aA0CVC,cAPS,SAACC,GAAD,MAAY,CAClC1C,SAAU0C,EAAM1C,SAASQ,MACzBN,MAAOwC,EAAM1C,SAASE,MACtBC,SAAUuC,EAAM1C,SAASG,SACzBC,SAAUsC,EAAM1C,SAASI,WAGa,CAAEL,iBAAgBsE,aJN9B,SAAC7D,EAAO8D,GAAR,OAAiB,SAACjE,GAC5C,IAAML,EAAWQ,EAAM4C,QACV,KAATkB,EACFtE,EAASsE,KAAK,SAAC9C,EAAG+C,GAAJ,MACH,gBAATD,EACI9C,EAAEV,MAAQyD,EAAEzD,MACV,GACC,EACHU,EAAEV,MAAQyD,EAAEzD,MACZ,GACC,IAGPd,EAASsE,KAAK,SAAC9C,EAAG+C,GAAJ,OAAW/C,EAAEI,GAAK2C,EAAE3C,GAAK,GAAK,IAE9CvB,EAAS,CACPC,KCvDmC,0BDwDnCC,QAAS,CACP+D,KAAMA,EACN9D,MAAOR,QIbEyC,CACbuB,mCCvCIQ,EAAYC,YAAW,CAC3BC,KAAM,CACJC,MAAO,OAIX,SAASC,EAAUR,GACjB,eAAAtC,OAAWsC,GAwCb,IAMe3B,cANS,SAACC,GAAD,MAAY,CAClC1C,SAAU0C,EAAM1C,SAASQ,MACzBN,MAAOwC,EAAM1C,SAASE,MACtBD,KAAMyC,EAAM1C,SAASC,OAGiB,CAAEF,kBAA3B0C,CA3Cf,SAAqBxB,GACnB,IAAM4D,EAAUL,IADUM,EAEAC,IAAMC,SAAS,CAAC,EAAG,MAFnBC,EAAAvB,OAAAwB,EAAA,EAAAxB,CAAAoB,EAAA,GAEnBV,EAFmBa,EAAA,GAEZE,EAFYF,EAAA,GAkB1B,OACE1D,EAAAC,EAAAC,cAAA,OAAKC,UAAWmD,EAAQH,MACtBnD,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAYxD,GAAG,eAAeyD,cAAY,GACxC9D,EAAAC,EAAAC,cAAA,KAAG6D,MAAO,CAAEC,SAAU,UAAtB,iBAEFhE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CACEpB,MAAOA,EACPH,SArBe,SAACC,EAAOuB,GAC3BN,EAASM,IAqBLC,kBAAkB,OAClBC,kBAAgB,eAChBC,iBAAkBhB,EAClBiB,IAAK,EACLC,IAAK,IACLC,kBAvBgB,SAAC/D,EAAGoC,GACxBnD,EAAMlB,eACJkB,EAAMjB,SACNiB,EAAMhB,KACNgB,EAAMf,MACNkE,EAAM,GACNA,EAAM,UC5BN4B,mLACK,IAAA7E,EAAAH,KAEP,OADAiF,QAAQC,IAAIlF,KAAKC,OAEfM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,aACG,IADH,eAGEF,EAAAC,EAAAC,cAAA,UACEC,UAAU,eACVuC,SAAU,SAACC,GACT/C,EAAKF,MAAMlB,eACToB,EAAKF,MAAMjB,SACXmB,EAAKF,MAAMhB,KACXiE,EAAMC,OAAOC,MACbjD,EAAKF,MAAMd,SACXgB,EAAKF,MAAMb,YAIfmB,EAAAC,EAAAC,cAAA,UAAQ2C,MAAM,IAAd,OACA7C,EAAAC,EAAAC,cAAA,UAAQ2C,MAAM,SAAd,SACA7C,EAAAC,EAAAC,cAAA,UAAQ2C,MAAM,QAAd,QACA7C,EAAAC,EAAAC,cAAA,UAAQ2C,MAAM,QAAd,QACA7C,EAAAC,EAAAC,cAAA,UAAQ2C,MAAM,SAAd,oBA1BY5B,aA0CXC,cAPS,SAACC,GAAD,MAAY,CAClC1C,SAAU0C,EAAM1C,SAASQ,MACzBL,SAAUuC,EAAM1C,SAASG,SACzBC,SAAUsC,EAAM1C,SAASI,SACzBH,KAAMyC,EAAM1C,SAASC,OAGiB,CACtCF,kBADa0C,CAEZuD,mBC1CGG,EAAY,CAChB3F,MAAO,GACPmC,cAAe,GACf1C,KAAM,GACNqE,KAAM,GACNnE,SAAU,EACVC,SAAU,IACVF,MAAO,ICTMkG,cAAgB,CAC7BpG,SDUa,WAAqC,IAA3B0C,EAA2B2D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnBF,EAAWK,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClD,OAAQC,EAAOlG,MACb,INjB0B,iBMkBxB,OAAOoD,OAAAC,EAAA,EAAAD,CAAA,GAAKhB,EAAZ,CAAmBlC,MAAOgG,EAAOjG,QAASoC,cAAe6D,EAAOjG,UAClE,INjB2B,kBMkBzB,OAAOmD,OAAAC,EAAA,EAAAD,CAAA,GACFhB,EADL,CAEEC,cAAe6D,EAAOjG,QAAQC,MAC9BP,KAAMuG,EAAOjG,QAAQN,KACrBE,SAAUqG,EAAOjG,QAAQJ,SACzBC,SAAUoG,EAAOjG,QAAQH,SACzBF,MAAOsG,EAAOjG,QAAQL,QAE1B,IN3BmC,0BM4BjC,OAAOwD,OAAAC,EAAA,EAAAD,CAAA,GACFhB,EADL,CAEEC,cAAe6D,EAAOjG,QAAQC,MAC9B8D,KAAMkC,EAAOjG,QAAQ+D,OAEzB,QACE,OAAO5B,IC7BXE,KCJa,WAA8B,IAApBF,EAAoB2D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,GAAIG,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAQC,EAAOlG,MACb,IRDuB,cQGvB,IRF4B,mBQG1B,OAAOoD,OAAAC,EAAA,EAAAD,CAAA,GAAKhB,EAAZ,CAAmBlC,MAAOgG,EAAOjG,QAAQ2B,YAE3C,QACE,OAAOQ,MCHPyD,EAAY,CAAEvD,KAAM,CAAEpC,MAHVoD,aAAa6C,QAAQ,aACnC3C,KAAK4C,MAAM9C,aAAa6C,QAAQ,cAChC,KAEEE,EAAkBC,OAAOC,sCAAwCC,IAMxDC,EALDC,YACZC,EACAd,EACAQ,EAAgBO,YAAgBC,OCqBnBC,0LArBX,OACE7F,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAUN,MAAOA,GACfxF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,6CACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAC6F,EAAD,MACA/F,EAAAC,EAAAC,cAAC8F,EAAD,MACAhG,EAAAC,EAAAC,cAAC+F,EAAD,MACAjG,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACgG,EAAD,OAEFlG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAfTc,cCEEkF,QACW,cAA7Bd,OAAOe,SAASC,UAEe,UAA7BhB,OAAOe,SAASC,UAEhBhB,OAAOe,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOxG,EAAAC,EAAAC,cAACuG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvF,KAAK,SAAAwF,GACjCA,EAAaC","file":"static/js/main.269c9ac1.chunk.js","sourcesContent":["export default {\r\n    formatCurrency: function (num) {\r\n        return 'â‚¹' + Number(num.toFixed(1)).toLocaleString() + ' ';\r\n    }\r\n}","import {\r\n  FETCH_PRODUCTS,\r\n  FILTER_PRODUCTS,\r\n  ORDER_PRODUCTS_BY_PRICE,\r\n} from \"./types\";\r\n\r\nexport const fetchProducts = () => (dispatch) => {\r\n  fetch(\"http://localhost:8000/products\")\r\n    .then((res) => res.json())\r\n    .catch((err) =>\r\n      fetch(\"db.json\")\r\n        .then((res) => res.json())\r\n        .then((data) => data.products)\r\n    )\r\n    .then((data) => {\r\n      dispatch({ type: FETCH_PRODUCTS, payload: data });\r\n    });\r\n};\r\n\r\nexport const filterProducts = (products, size, color, minPrice, maxPrice) => (\r\n  dispatch\r\n) => {\r\n  dispatch({\r\n    type: FILTER_PRODUCTS,\r\n    payload: {\r\n      size,\r\n      color,\r\n      minPrice,\r\n      maxPrice,\r\n      items: products.filter(\r\n        (x) =>\r\n          (size === \"\" || x.availableSizes.indexOf(size.toUpperCase()) >= 0) &&\r\n          x.price >= minPrice &&\r\n          x.price <= maxPrice &&\r\n          (color === \"\" || x.color === color)\r\n      ),\r\n    },\r\n  });\r\n};\r\n\r\nexport const sortProducts = (items, sort) => (dispatch) => {\r\n  const products = items.slice();\r\n  if (sort !== \"\") {\r\n    products.sort((a, b) =>\r\n      sort === \"lowestprice\"\r\n        ? a.price > b.price\r\n          ? 1\r\n          : -1\r\n        : a.price < b.price\r\n        ? 1\r\n        : -1\r\n    );\r\n  } else {\r\n    products.sort((a, b) => (a.id > b.id ? 1 : -1));\r\n  }\r\n  dispatch({\r\n    type: ORDER_PRODUCTS_BY_PRICE,\r\n    payload: {\r\n      sort: sort,\r\n      items: products,\r\n    },\r\n  });\r\n};\r\n","export const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\r\nexport const ORDER_PRODUCTS_BY_PRICE = \"ORDER_PRODUCTS_BY_PRICE\";\r\nexport const FILTER_PRODUCTS = \"FILTER_PRODUCTS\";\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport util from \"../util\";\r\nimport { addToCart } from \"../actions/cartActions\";\r\nimport { fetchProducts } from \"../actions/productActions\";\r\nclass Products extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchProducts();\r\n  }\r\n  render() {\r\n    const productItems = this.props.products.map((product) => (\r\n      <div className=\"col-md-4\" key={product.id}>\r\n        <div className=\"thumbnail text-center\">\r\n          <a\r\n            href={`#${product.id}`}\r\n            onClick={(e) => this.props.addToCart(this.props.cartItems, product)}\r\n          >\r\n            <img src={`products/${product.sku}_2.jpg`} alt={product.title} />\r\n            <p>{product.title}</p>\r\n          </a>\r\n          <b>{util.formatCurrency(product.price)}</b> <br/>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={(e) => this.props.handleAddToCart(e, product)}\r\n          >\r\n            Add to cart\r\n          </button>\r\n        </div>\r\n      </div>\r\n    ));\r\n\r\n    return <div className=\"row\">{productItems}</div>;\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  products: state.products.filteredItems,\r\n  cartItems: state.cart.items,\r\n});\r\nexport default connect(mapStateToProps, { fetchProducts, addToCart })(Products);\r\n","import { ADD_TO_CART, REMOVE_FROM_CART } from \"./types\";\r\n\r\nexport const addToCart = (items, product) => (dispatch) => {\r\n  const cartItems = items.slice();\r\n  let productAlreadyInCart = false;\r\n\r\n  cartItems.forEach((cp) => {\r\n    if (cp.id === product.id) {\r\n      cp.count += 1;\r\n      productAlreadyInCart = true;\r\n    }\r\n  });\r\n\r\n  if (!productAlreadyInCart) {\r\n    cartItems.push({ ...product, count: 1 });\r\n  }\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\r\n  dispatch({ type: ADD_TO_CART, payload: { cartItems } });\r\n};\r\n\r\nexport const removeFromCart = (items, product) => (dispatch) => {\r\n  const cartItems = items.slice().filter((a) => a.id !== product.id);\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\r\n  dispatch({ type: REMOVE_FROM_CART, payload: { cartItems } });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { filterProducts, sortProducts } from \"../actions/productActions\";\r\n\r\nclass SizeFilter extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\"></div>\r\n        <div className=\"col-md-4\">\r\n          <label>\r\n            {\" \"}\r\n            Filter Size\r\n            <select\r\n              className=\"form-control\"\r\n              onChange={(event) => {\r\n                this.props.filterProducts(\r\n                  this.props.products,\r\n                  event.target.value,\r\n                  this.props.color,\r\n                  this.props.minPrice,\r\n                  this.props.maxPrice\r\n                );\r\n              }}\r\n            >\r\n              <option value=\"\">ALL</option>\r\n              <option value=\"x\">XS</option>\r\n              <option value=\"s\">S</option>\r\n              <option value=\"m\">M</option>\r\n              <option value=\"l\">L</option>\r\n              <option value=\"xl\">XL</option>\r\n              <option value=\"xxl\">XXL</option>\r\n            </select>\r\n          </label>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  products: state.products.items,\r\n  color: state.products.color,\r\n  minPrice: state.products.minPrice,\r\n  maxPrice: state.products.maxPrice,\r\n});\r\n\r\nexport default connect(mapStateToProps, { filterProducts, sortProducts })(\r\n  SizeFilter\r\n);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { filterProducts } from \"../actions/productActions\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 800,\r\n  },\r\n});\r\n\r\nfunction valuetext(value) {\r\n  return `â‚¹${value}`;\r\n}\r\n\r\nfunction PriceFilter(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState([0, 500]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const filterByPrice = (e, value) => {\r\n    props.filterProducts(\r\n      props.products,\r\n      props.size,\r\n      props.color,\r\n      value[0],\r\n      value[1]\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography id=\"range-slider\" gutterBottom>\r\n        <b style={{ fontSize: \"1.3em\" }}>Price Filter</b>\r\n      </Typography>\r\n      <Slider\r\n        value={value}\r\n        onChange={handleChange}\r\n        valueLabelDisplay=\"auto\"\r\n        aria-labelledby=\"range-slider\"\r\n        getAriaValueText={valuetext}\r\n        min={0}\r\n        max={1000}\r\n        onChangeCommitted={filterByPrice}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  products: state.products.items,\r\n  color: state.products.color,\r\n  size: state.products.size,\r\n});\r\n\r\nexport default connect(mapStateToProps, { filterProducts })(PriceFilter);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { filterProducts } from \"../actions/productActions\";\r\n\r\nclass ColorFilter extends Component {\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\"></div>\r\n        <div className=\"col-md-4\">\r\n          <label>\r\n            {\" \"}\r\n            Filter Color\r\n            <select\r\n              className=\"form-control\"\r\n              onChange={(event) => {\r\n                this.props.filterProducts(\r\n                  this.props.products,\r\n                  this.props.size,\r\n                  event.target.value,\r\n                  this.props.minPrice,\r\n                  this.props.maxPrice\r\n                );\r\n              }}\r\n            >\r\n              <option value=\"\">ALL</option>\r\n              <option value=\"black\">Black</option>\r\n              <option value=\"grey\">Grey</option>\r\n              <option value=\"blue\">Blue</option>\r\n              <option value=\"white\">White</option>\r\n            </select>\r\n          </label>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  products: state.products.items,\r\n  minPrice: state.products.minPrice,\r\n  maxPrice: state.products.maxPrice,\r\n  size: state.products.size,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  filterProducts,\r\n})(ColorFilter);\r\n","import {\r\n  FETCH_PRODUCTS,\r\n  FILTER_PRODUCTS,\r\n  ORDER_PRODUCTS_BY_PRICE,\r\n} from \"../actions/types\";\r\n\r\nconst initState = {\r\n  items: [],\r\n  filteredItems: [],\r\n  size: \"\",\r\n  sort: \"\",\r\n  minPrice: 0,\r\n  maxPrice: 1000,\r\n  color: \"\",\r\n};\r\nexport default function (state = initState, action) {\r\n  switch (action.type) {\r\n    case FETCH_PRODUCTS:\r\n      return { ...state, items: action.payload, filteredItems: action.payload };\r\n    case FILTER_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        filteredItems: action.payload.items,\r\n        size: action.payload.size,\r\n        minPrice: action.payload.minPrice,\r\n        maxPrice: action.payload.maxPrice,\r\n        color: action.payload.color,\r\n      };\r\n    case ORDER_PRODUCTS_BY_PRICE:\r\n      return {\r\n        ...state,\r\n        filteredItems: action.payload.items,\r\n        sort: action.payload.sort,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport productReducers from \"./productReducers\";\r\nimport cartReducers from \"./cartReducers\";\r\n\r\nexport default combineReducers({\r\n  products: productReducers,\r\n  cart: cartReducers,\r\n});\r\n","import { ADD_TO_CART, REMOVE_FROM_CART } from \"../actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      return { ...state, items: action.payload.cartItems };\r\n    case REMOVE_FROM_CART:\r\n      return { ...state, items: action.payload.cartItems };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducers from \"./reducers\";\r\n\r\nconst cartItems = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\nconst initState = { cart: { items: cartItems } };\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducers,\r\n  initState,\r\n  composeEnhancer(applyMiddleware(thunk))\r\n);\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport Products from \"./components/Products\";\r\nimport SizeFilter from \"./components/SizeFilter\";\r\nimport PriceFitler from \"./components/PriceFilter\";\r\nimport ColorFilter from \"./components/ColorFilter\";\r\n\r\nimport store from \"./store\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <div className=\"container\">\r\n          <h1>E-commerce Shopping Cart Filter</h1>\r\n          <hr />\r\n          <div className=\"row\">\r\n            <div className=\"col-md-9\">\r\n              <SizeFilter />\r\n              <ColorFilter />\r\n              <PriceFitler />\r\n              <hr />\r\n              <Products />\r\n            </div>\r\n            <div className=\"col-md-3\"></div>\r\n          </div>\r\n        </div>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}